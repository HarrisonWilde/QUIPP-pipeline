#!/usr/bin/env python

import argparse
import ctgan_main
import os

def handle_cmdline_args():
    parser = argparse.ArgumentParser(
        description='Read input files and output file for run of CTGAN.')

    parser.add_argument('parameter_json', help='The json containing the synthesis parameters')

    parser.add_argument('data_path_prefix', help='The prefix of the path to the input data, relative to QUIPP-pipeline root (append .csv and .json to get the data files)')

    parser.add_argument('output_prefix', help='The prefix to use for the output files (.json and .csv), in the current directory')

    args = parser.parse_args()

    return args


def main():
    args = handle_cmdline_args()
    
    in_prefix = args.data_path_prefix
    out_prefix = args.output_prefix
    parameter_json_path = args.parameter_json

    ctgan_syn = SynthesizerCTGAN()

    in_csv = in_prefix + '.csv'
    in_json = in_prefix + '.json'

    ctgan_syn.fit_synthesizer(parameter_json_path, in_csv, out_json)

    ## synthesize with output_path currently doesn't work in this way
    # ctgan_syn.synthesize(num_samples_to_synthesize, output_path=out_prefix)


if __name__=='__main__':
    main()
